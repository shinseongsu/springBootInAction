buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
        lombokVersion = "1.18.2"
        querydslVersion = "4.2.1"
        querydslPluginVersion = '1.0.10'
    }
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" } // plugin 저장소
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${querydslPluginVersion}")
    }
}

apply plugin: "java"
apply plugin: "idea"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: "com.ewerk.gradle.plugins.querydsl"

group 'com.example'
version '0.0.1-SNAPSHOT'

bootJar {
    archiveFileName = 'readinglist-0.0.1-SNAPSHOT.jar'
}

idea{
    module{
        sourceDirs +=file('generated/')
    }
}

def querydslSrcDir = 'src/main/generated'
querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslSrcDir
}
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}
clean {
    delete file('src/main/generated') // 인텔리제이 Annotation processor 생성물 생성위치
}
configurations {
    querydsl.extendsFrom compileClasspath
}
sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', querydslSrcDir]
        }
    }
}

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()
}

dependencies {
    compileOnly ("org.projectlombok:lombok:${lombokVersion}")
    compile('org.mariadb.jdbc:mariadb-java-client')
    compile('org.hibernate:hibernate-entitymanager:5.4.24.Final')
    compile('org.springframework.boot:spring-boot-autoconfigure')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
//    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("com.querydsl:querydsl-core:${querydslVersion}") // querydsl
    compile("com.querydsl:querydsl-jpa:${querydslVersion}") // querydsl
    compile("com.querydsl:querydsl-apt:${querydslVersion}") // querydsl
    compile("javax.servlet:jstl")
    compile("org.apache.tomcat.embed:tomcat-embed-jasper")

//    runtime('com.h2database:h2')
    runtime('org.springframework.boot:spring-boot-devtools')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompileOnly("org.projectlombok:lombok:${lombokVersion}")

    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
//    annotationProcessor("com.querydsl:querydsl-apt:${querydslVersion}:jpa")

}